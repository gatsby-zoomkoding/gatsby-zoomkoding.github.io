{"version":3,"sources":["webpack:///./src/components/vertical-tabs/index.js","webpack:///./src/components/posts-page-body/index.js","webpack:///./src/components/posts-page-header/index.js","webpack:///./src/templates/category-template.js"],"names":["VerticalTabs","value","onChange","tabs","className","orientation","variant","scrollButtons","label","key","index","tabIndex","posts","post","title","subtitle","pageContext","edges","currentCategory","node","categories","tab","e","navigate"],"mappings":"sOAKe,SAASA,EAAa,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACtD,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,iBACb,uBACEA,UADF,WAEEC,YAFF,WAGEJ,MAHF,EAIEC,SAJF,EAKEI,QALF,aAMEC,cAAc,MAEbJ,EAAA,KAAS,qBACR,uBAAKK,MAAL,EAAmBC,IAAKC,U,cCWpC,EAtBsB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUT,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMS,EAAY,EAAZA,MACjD,OACE,yBAAKR,UAAU,2BACb,yBAAKA,UAAU,mBACb,uBAAMA,UAAN,OAAyBH,MAAzB,EAA0CC,SAA1C,EAA8DC,KAAMA,IACpE,uBACES,MACED,QAEIC,EAAA,QAAa,mBAAUC,sBAAyBV,EAAnC,SAGrB,qBACEC,UADF,gBAEEH,MAFF,EAGEC,SAHF,EAIEC,KAAMA,OCVhB,G,UATwB,SAAC,GAAyB,IAAvBW,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChC,OACE,yBAAKX,UAAU,6BACb,yBAAKA,UAAU,oBADjB,GAEE,yBAAKA,UAAU,wBAHnB,MCIa,sBAAsB,IAAnBY,EAAkB,EAAlBA,YACRC,EAA2BD,EADD,MACnBE,EAAoBF,EADD,gBAE5BJ,EAAQK,EAAA,KAAU,gBAAGE,EAAH,cAAc,QAAd,MAClBC,EAAaJ,EAAnB,WACML,EAAWS,EAAA,WAAqB,mBAASC,IAAT,KAOtC,OACE,2BACE,uBAAKP,MAAM,UACX,qBAAiBA,MAAOM,EAAxB,GAA8CL,SAAaH,EAAL,kBACtD,qBACED,SADF,EAEET,SAXmB,SAACoB,EAAE,GAC1B,IAAIrB,EAAasB,mBAAjB,UACKA,mBAAS,UAAUH,EAAnBG,KAUDpB,KAHF,EAIES,MACED,QAEIC,EAAA,QAAa,mBAAUC,sBAAyBO,EAAnC,Y","file":"component---src-templates-category-template-js-b8786b391dda1753b1d5.js","sourcesContent":["import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nimport './style.scss';\n\nexport default function VerticalTabs({ value, onChange, tabs }) {\n  return (\n    <div className=\"vertical-tabs-wrapper\">\n      <div className=\"vertical-tabs\">\n        <Tabs\n          className=\"mui-tabs\"\n          orientation=\"vertical\"\n          value={value}\n          onChange={onChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n        >\n          {tabs.map((title, index) => (\n            <Tab label={title} key={index} />\n          ))}\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PostCardsColumn from '../post-cards-column';\nimport Tabs from '../tabs';\nimport VerticalTabs from '../vertical-tabs';\n\nimport './style.scss';\n\nconst PostsPageBody = ({ tabIndex, onChange, tabs, posts }) => {\n  return (\n    <div className=\"posts-page-body-wrapper\">\n      <div className=\"posts-page-body\">\n        <Tabs className={'tabs'} value={tabIndex} onChange={onChange} tabs={tabs} />\n        <PostCardsColumn\n          posts={\n            tabIndex === 0\n              ? posts\n              : posts.filter((post) => post.categories.includes(tabs[tabIndex]))\n          }\n        />\n        <VerticalTabs\n          className={'vertical-tabs'}\n          value={tabIndex}\n          onChange={onChange}\n          tabs={tabs}\n        />\n      </div>\n    </div>\n  );\n};\nexport default PostsPageBody;\n","import React from 'react';\n\nimport './style.scss';\n\nconst PostsPageHeader = ({ title, subtitle }) => {\n  return (\n    <div className=\"posts-page-header-wrapper\">\n      <div className=\"posts-page-title\">{title}</div>\n      <div className=\"posts-page-sub-title\">{subtitle}</div>\n    </div>\n  );\n};\n\nexport default PostsPageHeader;\n","import React from 'react';\nimport { navigate } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Post from '../models/post';\nimport PostsPageBody from '../components/posts-page-body';\nimport PostsPageHeader from '../components/posts-page-header';\n\nexport default ({ pageContext }) => {\n  const { edges, currentCategory } = pageContext;\n  const posts = edges.map(({ node }) => new Post(node));\n  const categories = pageContext.categories;\n  const tabIndex = categories.findIndex((tab) => tab === currentCategory);\n\n  const onTabIndexChange = (e, value) => {\n    if (value === 0) navigate(`/posts`);\n    else navigate(`/posts/${categories[value]}`);\n  };\n\n  return (\n    <Layout>\n      <SEO title=\"Posts\" />\n      <PostsPageHeader title={categories[tabIndex]} subtitle={`${posts.length} posts`} />\n      <PostsPageBody\n        tabIndex={tabIndex}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        posts={\n          tabIndex === 0\n            ? posts\n            : posts.filter((post) => post.categories.includes(categories[tabIndex]))\n        }\n      />\n    </Layout>\n  );\n};\n"],"sourceRoot":""}