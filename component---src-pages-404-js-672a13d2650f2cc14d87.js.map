{"version":3,"sources":["webpack:///./src/components/page-header/index.js","webpack:///./src/components/page-footer/index.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["PageHeader","siteTitle","className","to","author","githubUrl","Date","href","children","data","useStaticQuery","style","display","flexDirection","minHeight","description","title","site","metaDescription","htmlAttributes","lang","defaultTitle","meta","property","content","name","ogImage"],"mappings":"kLAMMA,G,UAAa,SAAC,GAAD,IAAGC,EAAH,mBACjB,4BAAQC,UAAU,uBAChB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAN,OAAuBC,GAAG,KAF9B,IAME,yBAAKD,UAAU,oBACb,0BAAMA,UAAN,OAAuBC,GAAG,UAD5B,SAIE,0BAAMD,UAAN,OAAuBC,GAAG,UAZf,cAwBnBH,eAA0B,CACxBC,UAAU,IAGZ,QCdA,G,UAhBmB,SAAC,GAAD,IAAGG,EAAH,SAAWC,EAAX,mBACjB,oCACE,4BAAQH,UAAU,uBAChB,uBAAGA,UAAU,eAAb,MACK,IAAII,MADT,kBAGE,uBAAGC,KAAMF,GAHX,iBAKE,uBAAGE,KAAK,2DARG,mCCyCnB,IA/Be,SAAC,GAAkB,IAAD,QAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAb,aAcA,OACE,yBAAKC,MAAO,CAAEC,QAAF,OAAmBC,cAAnB,SAA4CC,UAAW,UACjE,qBAAYb,WAAW,UAAAQ,EAAA,0DACvB,8BAFF,GAGE,qBACEL,QAAQ,UAAAK,EAAA,iDADV,SAEEJ,WAAW,UAAAI,EAAA,gH,kCCnCnB,iDA6DA,IAzDA,SAAa,GAAyB,IAAvBM,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MAClBC,EAASP,yBADkB,mBAgB7BQ,EAAkBH,GAAeE,eAAvC,YACA,OACE,uBACEE,eAAgB,CAAEC,KAAM,MACxBJ,MAFF,EAGEK,aAAcJ,eAHhB,MAIEK,KAAM,CACJ,CACEC,SADF,WAEEC,QAASR,GAEX,CACEO,SADF,gBAEEC,QAASR,GAEX,CACES,KADF,cAEED,QAASN,GAEX,CACEK,SADF,iBAEEC,QAASN,GAEX,CACEK,SADF,YAEEC,QAASP,eAAkBb,QAE7B,CACEmB,SADF,WAEEC,QAASP,eAAkBS,SAG7B,CACEH,SADF,UAEEC,QAAQ,gB,kCCtDlB,wDAaA,UARqB,kBACnB,2BACE,uBAAKR,MAAM,mBACX,4BAFF,kBAGE,2BAJiB","file":"component---src-pages-404-js-672a13d2650f2cc14d87.js","sourcesContent":["import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './style.scss';\n\nconst PageHeader = ({ siteTitle }) => (\n  <header className=\"page-header-wrapper\">\n    <div className=\"page-header\">\n      <div className=\"front-section\">\n        <Link className=\"link\" to=\"/\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className=\"trailing-section\">\n        <Link className=\"link\" to=\"/about\">\n          about\n        </Link>\n        <Link className=\"link\" to=\"/posts\">\n          posts\n        </Link>\n      </div>\n    </div>\n  </header>\n);\n\nPageHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nPageHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default PageHeader;\n","import React from 'react';\n\nimport './style.scss';\n\nconst PageFooter = ({ author, githubUrl }) => (\n  <>\n    <footer className=\"page-footer-wrapper\">\n      <p className=\"page-footer\">\n        Â© {new Date().getFullYear()}\n        &nbsp;\n        <a href={githubUrl}>{author}</a>\n        &nbsp;powered by\n        <a href=\"https://github.com/zoomKoding/gatsby-starter-zoomkoding\">\n          &nbsp;gatsby-starter-zoomkoding\n        </a>\n      </p>\n    </footer>\n  </>\n);\n\nexport default PageFooter;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport PageHeader from '../page-header';\nimport PageFooter from '../page-footer';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n          social {\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <PageHeader siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n      <PageFooter\n        author={data.site.siteMetadata?.author || `Author`}\n        githubUrl={data.site.siteMetadata?.social?.github || `https://www.github.com`}\n      />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            ogImage\n          }\n        }\n      }\n    `,\n  );\n  \n  const metaDescription = description || site.siteMetadata.description;\n  return (\n    <Helmet\n      htmlAttributes={{ lang: 'en' }}\n      title={title}\n      defaultTitle={site.siteMetadata.title}\n      meta={[\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:site_title`,\n          content: title,\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:author',\n          content: site.siteMetadata.author,\n        },\n        {\n          property: 'og:image',\n          content: site.siteMetadata.ogImage,\n        },\n        \n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ]}\n    />\n  );\n}\n\nexport default SEO;\n","import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}